{"version":3,"sources":["components/organisms/CurrentWeather/styles.module.scss","components/organisms/Weather3Days/styles.module.scss","components/organisms/Weather8Days/styles.module.scss","components/molecules/CitySearch/styles.module.scss","components/organisms/Header/styles.module.scss","components/molecules/Precipitation/styles.module.scss","components/atoms/City/styles.module.scss","components/templates/Weather/styles.module.scss","components/atoms/Title/styles.module.scss","components/molecules/PresetCities/styles.module.scss","components/atoms/Title/index.tsx","components/atoms/City/index.tsx","components/molecules/PresetCities/index.tsx","components/molecules/CitySearch/index.tsx","components/organisms/Header/index.tsx","components/organisms/CurrentWeather/index.tsx","components/molecules/Precipitation/index.tsx","components/organisms/Weather3Days/index.tsx","components/organisms/Weather8Days/index.tsx","components/templates/Weather/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Title","className","styles","title","City","props","location","useLocation","to","daysAmount","currentCity","cityLabel","id","cityInput","onClick","event","changeCity","cityName","style","pathname","slice","border","city","Preset–°ities","useState","cities","preset","map","element","CitySearch","sityName","setCityName","searchWrapper","search","searchInput","type","name","placeholder","value","onChange","target","onKeyPress","key","length","alert","selectedCity","Header","header","toUpperCase","selectPeriod","selectButton","newDaysAmount","CurrentWeather","currentWeather","setCurrentWeather","currentWind","setCurrentWind","currentRain","setCurrentRain","currentSnow","setCurrentSnow","currentTime","setCurrentTime","notFound","setNotFound","offset","setoffset","useEffect","fetch","then","res","json","data","main","timezone","wind","speed","rain","JSON","stringify","snow","d","Date","utc","getTime","getTimezoneOffset","nd","result","toLocaleString","day","getDay","getCurrentTime","current","currentWrapper","currentItem","temp","feels_like","humidity","Precipitation","precipitation","moment","display","interval1","interval2","Weather3Days","weather3Days","setWeather3Days","getMomentTime","dt","getStyle","tz","list","days3","days3Title","index","partOfDay","dt_txt","backgroundColor","color","clouds","all","undefined","Weather8Days","weather8Days","setWeather8Days","match","params","status","firstData","coord","lat","lon","daily","days8","days8Title","daysList","timezone_offset","night","wind_speed","Weather","setDaysAmount","setcurrentCity","history","useHistory","push","weather","arg","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.a2906a75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"current\":\"styles_current__1qWax\",\"notFound\":\"styles_notFound__3Wt4N\",\"currentTime\":\"styles_currentTime__I2M2k\",\"currentWrapper\":\"styles_currentWrapper__3eBc7\",\"currentItem\":\"styles_currentItem__2FX4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"days3\":\"styles_days3__eUFuS\",\"days3Title\":\"styles_days3Title__3j6OL\",\"partOfDay\":\"styles_partOfDay__2Tq0G\",\"moment\":\"styles_moment__NlgBa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"days8\":\"styles_days8__2t76x\",\"days8Title\":\"styles_days8Title__3bWWu\",\"daysList\":\"styles_daysList__2QI3T\",\"day\":\"styles_day__s731O\",\"moment\":\"styles_moment__AwDdN\",\"toCurrent\":\"styles_toCurrent__LAUEb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchWrapper\":\"styles_searchWrapper__2DNzg\",\"search\":\"styles_search__2FsAs\",\"searchInput\":\"styles_searchInput__3RZ-y\",\"selectedCity\":\"styles_selectedCity__3kNLo\",\"cityName\":\"styles_cityName__2v0QS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2LQRQ\",\"selectPeriod\":\"styles_selectPeriod__3Ly7d\",\"selectButton\":\"styles_selectButton__2d0Uk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"precipitation\":\"styles_precipitation__3Vuif\",\"moment\":\"styles_moment__14Sz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cityLabel\":\"styles_cityLabel__11dAD\",\"cityName\":\"styles_cityName__2Yl2G\",\"cityInput\":\"styles_cityInput__2WUs3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"styles_weather__3N9ud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__34xU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preset\":\"styles_preset__2QKk2\"};","import * as React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nfunction Title() {\r\n  return <h1 className={styles.title}>Weather-App</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import * as React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\ninterface IPropsCity {\r\n  currentCity: string;\r\n  city: string;\r\n  id: string;\r\n  changeCity(event: React.MouseEvent<HTMLElement>, city: string): void;\r\n  daysAmount: string;\r\n}\r\n\r\nconst City: React.FC<IPropsCity> = (props: IPropsCity) => {\r\n  const location = useLocation();\r\n  return (\r\n    <NavLink\r\n      to={\"/\" + props.daysAmount + \"/\" + props.currentCity}\r\n      className={styles.cityLabel}\r\n    >\r\n      <div\r\n        id={props.id}\r\n        className={styles.cityInput}\r\n        onClick={(event: React.MouseEvent<HTMLInputElement>) => {\r\n          props.changeCity(event, props.id);\r\n        }}\r\n      >\r\n        <span\r\n          className={styles.cityName}\r\n          style={\r\n            props.id === location.pathname.slice(7)\r\n              ? { border: \"0.5px solid rgb(139, 21, 21)\" }\r\n              : { border: \"0\" }\r\n          }\r\n        >\r\n          {props.city}\r\n        </span>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default City;\r\n","import * as React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\nimport { useState } from \"react\";\r\nimport City from \"../../atoms/City\";\r\ninterface ICity {\r\n  city: string;\r\n  id: string;\r\n}\r\n\r\ninterface IChangeCity {\r\n  changeCity(event: React.MouseEvent<HTMLElement>, city: string): void;\r\n  currentCity: string;\r\n  daysAmount: string;\r\n}\r\n\r\nconst Preset–°ities: React.FC<IChangeCity> = (props: IChangeCity) => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [cities, setCities] = useState<ICity[]>([\r\n    { city: \"Minsk\", id: \"Minsk\" },\r\n    { city: \"Moscow\", id: \"Moscow\" },\r\n    { city: \"Bratislava\", id: \"Bratislava\" },\r\n  ]);\r\n\r\n  return (\r\n    <div className={styles.preset}>\r\n      {cities.map((element) => (\r\n        <City\r\n          key={element.city}\r\n          id={element.id}\r\n          city={element.city}\r\n          changeCity={props.changeCity}\r\n          currentCity={props.currentCity}\r\n          daysAmount={props.daysAmount}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preset–°ities;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\ninterface IPropsSearch {\r\n  currentCity: string;\r\n  changeCity(event: React.KeyboardEvent<HTMLInputElement>, city: string): void;\r\n}\r\n\r\nconst CitySearch: React.FC<IPropsSearch> = (props: IPropsSearch) => {\r\n  const [sityName, setCityName] = useState(\"\");\r\n\r\n  return (\r\n    <div className={styles.searchWrapper}>\r\n      <div className={styles.search}>\r\n        <input\r\n          className={styles.searchInput}\r\n          type=\"text\"\r\n          name=\"search-city\"\r\n          placeholder=\"search city\"\r\n          value={sityName}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n            setCityName(event.target.value);\r\n          }}\r\n          onKeyPress={(event: React.KeyboardEvent<HTMLInputElement>) => {\r\n            if (event.key === \"Enter\") {\r\n              if (sityName.search(/[–∞-—è–ê-–Ø—ë–Å]/g) !== 0 && sityName.length > 1) {\r\n                props.changeCity(event, sityName);\r\n                setCityName(\"\");\r\n              } else {\r\n                setCityName(\"\");\r\n                alert(\"Enter the city in Latin letters\");\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <span className={styles.selectedCity}>\r\n        Weather in <span className={styles.cityName}>{props.currentCity}</span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CitySearch;\r\n","import * as React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\nimport Title from \"../../atoms/Title\";\r\nimport Preset–°ities from \"../../molecules/PresetCities\";\r\nimport CitySearch from \"../../molecules/CitySearch\";\r\n\r\ninterface IChangeCity {\r\n  changeCity(\r\n    event:\r\n      | React.MouseEvent<HTMLElement>\r\n      | React.KeyboardEvent<HTMLInputElement>,\r\n    city: string\r\n  ): void;\r\n  currentCity: string;\r\n  newDaysAmount(arg: string): void;\r\n  daysAmount: string;\r\n}\r\n\r\nconst Header: React.FC<IChangeCity> = (props: IChangeCity) => {\r\n  return (\r\n    <section className={styles.header}>\r\n      <Title />\r\n      <Preset–°ities\r\n        daysAmount={props.daysAmount}\r\n        currentCity={props.currentCity}\r\n        changeCity={props.changeCity}\r\n      />\r\n      <CitySearch\r\n        changeCity={props.changeCity}\r\n        currentCity={props.currentCity.toUpperCase()}\r\n      />\r\n      <div className={styles.selectPeriod}>\r\n        <button\r\n          className={styles.selectButton}\r\n          onClick={(event: React.MouseEvent<HTMLElement>) => {\r\n            props.newDaysAmount(\"days8\");\r\n          }}\r\n        >\r\n          To 8 days\r\n        </button>\r\n        <button\r\n          className={styles.selectButton}\r\n          onClick={(event: React.MouseEvent<HTMLElement>) => {\r\n            props.newDaysAmount(\"days3\");\r\n          }}\r\n        >\r\n          To 3 days\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\ntype MainDataType = {\r\n  feels_like: number;\r\n  humidity: number;\r\n  temp: number;\r\n};\r\ninterface IDataType {\r\n  main: MainDataType;\r\n  timezone: number;\r\n  wind: { speed: number };\r\n  rain: number;\r\n  snow: number;\r\n  clouds: { all: number };\r\n}\r\n\r\ninterface IProps {\r\n  currentCity: string;\r\n}\r\n\r\nconst CurrentWeather: React.FC<IProps> = (props: IProps) => {\r\n  const [currentWeather, setCurrentWeather] = useState<\r\n    MainDataType | undefined\r\n  >();\r\n  const [currentWind, setCurrentWind] = useState<number | undefined>(0);\r\n  const [currentRain, setCurrentRain] = useState<number | undefined>(0);\r\n  const [currentSnow, setCurrentSnow] = useState<number | undefined>(0);\r\n  const [currentTime, setCurrentTime] = useState(\"\");\r\n  const [notFound, setNotFound] = useState(\"\");\r\n  const [offset, setoffset] = useState(10800);\r\n\r\n  const getCurrentWeather = (city: string) => {\r\n    setNotFound(\"\");\r\n    fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${city}&type=like&units=metric&appid=2767f783403ac9fedd6aa003a5194148`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data: IDataType) => {\r\n        if (data.main) {\r\n          setoffset(data.timezone);\r\n          setCurrentWeather(data.main);\r\n          setCurrentWind(data.wind.speed);\r\n          setCurrentRain(\r\n            data.rain ? +JSON.stringify(data.rain).slice(6, -1) : 0\r\n          );\r\n          setCurrentSnow(\r\n            data.snow ? +JSON.stringify(data.snow).slice(6, -1) : 0\r\n          );\r\n        } else setNotFound(\"City not found!\");\r\n      });\r\n  };\r\n\r\n  const getCurrentTime = (offset: number) => {\r\n    const d = new Date();\r\n    const utc = d.getTime() + d.getTimezoneOffset() * 60000;\r\n    const nd = new Date(utc + 1000 * offset);\r\n    const result = nd.toLocaleString().slice(0, 17);\r\n    const days = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"];\r\n    const day = days[nd.getDay()];\r\n    const time = result + \", \" + day;\r\n    setCurrentTime(time);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCurrentWeather(props.currentCity);\r\n    getCurrentTime(offset);\r\n    // eslint-disable-next-line\r\n  }, [props.currentCity, offset]);\r\n\r\n  return (\r\n    <div className={styles.current}>\r\n      <div className={styles.notFound}>{notFound}</div>\r\n      <div className={styles.currentTime}>\r\n        Weather forecast for {currentTime} (local time)\r\n      </div>\r\n      <div className={styles.currentWrapper}>\r\n        <div className={styles.currentItem}>\r\n          *t - {currentWeather?.temp} &#8451;\r\n        </div>\r\n        <div className={styles.currentItem}>\r\n          *feels like - {currentWeather?.feels_like} &#8451;\r\n        </div>\r\n        <div className={styles.currentItem}>\r\n          *rh - {currentWeather?.humidity}%\r\n        </div>\r\n        <div className={styles.currentItem}>*wind - {currentWind}</div>\r\n        <div className={styles.currentItem}>\r\n          {currentRain && currentRain > 0\r\n            ? \"*rain - \" + currentRain + \" mm/h\"\r\n            : \"\"}\r\n        </div>\r\n        <div className={styles.currentItem}>\r\n          {currentSnow && currentSnow > 0\r\n            ? \"*snow - \" + currentSnow + \" mm/3h\"\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","/* eslint-disable no-unreachable */\r\nimport * as React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\ninterface IPropsPresip {\r\n  rain: number | undefined;\r\n  snow: number | undefined;\r\n  interval1: string;\r\n  interval2: string;\r\n}\r\n\r\nconst Precipitation: React.FC<IPropsPresip> = (props: IPropsPresip) => {\r\n  return (\r\n    <div className={styles.precipitation}>\r\n      <div\r\n        className={styles.moment}\r\n        style={props.rain ? { display: \"block\" } : { display: \"none\" }}\r\n      >\r\n        &#9730;\r\n        {props.rain ? \" \" + props.rain + \" mm\" + props.interval1 : \"\"}\r\n      </div>\r\n      <div\r\n        className={styles.moment}\r\n        style={props.snow ? { display: \"block\" } : { display: \"none\" }}\r\n      >\r\n        &#10054;\r\n        {props.snow ? \" \" + props.snow + \" mm\" + props.interval2 : \"\"}\r\n      </div>\r\n      <div\r\n        className={styles.moment}\r\n        style={\r\n          !props.rain && !props.snow\r\n            ? { display: \"block\" }\r\n            : { display: \"none\" }\r\n        }\r\n      >\r\n        without &#9730;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Precipitation;\r\n","/* eslint-disable no-unreachable */\r\nimport * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\nimport Precipitation from \"../../molecules/Precipitation\";\r\n\r\ntype MainDataType = {\r\n  feels_like: number;\r\n  humidity: number;\r\n  pressure: number;\r\n  temp: number;\r\n};\r\ninterface IDataType {\r\n  main: MainDataType;\r\n  clouds: { all: number };\r\n  wind: { speed: number };\r\n  dt: number;\r\n  dt_txt: string;\r\n  rain: number;\r\n  snow: number;\r\n}\r\ninterface IDataList {\r\n  list: IDataType[];\r\n  city: { timezone: number };\r\n}\r\ninterface IProps3Days {\r\n  daysAmount: string;\r\n  currentCity: string;\r\n  match: { params: { city: string } };\r\n}\r\n\r\nconst Weather3Days: React.FC<IProps3Days> = (props: IProps3Days) => {\r\n  const [weather3Days, setWeather3Days] = useState<IDataList | undefined>();\r\n\r\n  const getDays3Weather = (city: string) => {\r\n    fetch(\r\n      `http://api.openweathermap.org/data/2.5/forecast?q=${city}&cnt=24&type=like&units=metric&appid=2767f783403ac9fedd6aa003a5194148`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data: IDataList) => {\r\n        if (data.list) {\r\n          setWeather3Days(data);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getMomentTime = (dt: number, timezone: number) => {\r\n    const nd = new Date((dt - 21600) * 1000 + 1000 * timezone);\r\n    const result = nd.toLocaleString().slice(0, 17);\r\n    const days = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"];\r\n    const day = days[nd.getDay()];\r\n    const time = result + \", \" + day;\r\n    return time;\r\n  };\r\n\r\n  const getStyle = (dt: number, tz: number) => {\r\n    switch (dt + tz / 3600) {\r\n      case 3:\r\n        return true;\r\n        break;\r\n      case 4:\r\n        return true;\r\n        break;\r\n      case 5:\r\n        return true;\r\n        break;\r\n      case 27:\r\n        return true;\r\n        break;\r\n      case 28:\r\n        return true;\r\n        break;\r\n      case 29:\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.daysAmount !== \"days8\") getDays3Weather(props.currentCity);\r\n    // eslint-disable-next-line\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className={styles.days3}>\r\n      <div className={styles.days3Title}>Weather forecast for 3 days</div>\r\n      <ul>\r\n        {weather3Days?.list.map((element, index) => (\r\n          <li\r\n            key={index}\r\n            className={styles.partOfDay}\r\n            style={\r\n              getStyle(\r\n                +element.dt_txt.slice(10, 13),\r\n                weather3Days.city.timezone\r\n              )\r\n                ? { backgroundColor: \"rgb(148, 109, 240)\", color: \"#fff\" }\r\n                : { backgroundColor: \"rgb(238, 237, 252)\" }\r\n            }\r\n          >\r\n            <div className={styles.moment}>\r\n              {getMomentTime(element.dt, weather3Days.city.timezone)}\r\n            </div>\r\n            <div className={styles.moment}>t {element.main.temp}&#8451;</div>\r\n            <div\r\n              className={styles.moment}\r\n              style={\r\n                element.clouds.all < 21\r\n                  ? { display: \"block\", color: \"rgb(250, 391, 157)\" }\r\n                  : { display: \"none\" }\r\n              }\r\n            >\r\n              &#9728;\r\n            </div>\r\n            <div\r\n              className={styles.moment}\r\n              style={\r\n                element.clouds.all > 20 && element.clouds.all < 61\r\n                  ? { display: \"block\", color: \"rgb(190, 190, 190)\" }\r\n                  : { display: \"none\" }\r\n              }\r\n            >\r\n              &#9925;\r\n            </div>\r\n            <div\r\n              className={styles.moment}\r\n              style={\r\n                element.clouds.all > 60\r\n                  ? { display: \"block\", color: \"#000\" }\r\n                  : { display: \"none\" }\r\n              }\r\n            >\r\n              &#9729;\r\n            </div>\r\n            <div className={styles.moment}>wind {element.wind.speed}</div>\r\n            <Precipitation\r\n              rain={\r\n                element.rain\r\n                  ? +JSON.stringify(element.rain).slice(6, -1)\r\n                  : undefined\r\n              }\r\n              snow={\r\n                element.snow\r\n                  ? +JSON.stringify(element.snow).slice(6, -1)\r\n                  : undefined\r\n              }\r\n              interval1=\"/h\"\r\n              interval2=\"/3h\"\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather3Days;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\nimport Precipitation from \"../../molecules/Precipitation\";\r\n\r\ntype Days8DataType = {\r\n  dt: number;\r\n  temp: { day: number; night: number };\r\n  wind_speed: number;\r\n  rain: number;\r\n  snow: number;\r\n};\r\n\r\ninterface IDataType {\r\n  daily: Days8DataType[];\r\n  timezone_offset: number;\r\n}\r\n\r\ninterface IProps {\r\n  currentCity: string;\r\n  match: { params: { city: string } };\r\n  daysAmount: string;\r\n}\r\n\r\nconst Weather8Days: React.FC<IProps> = (props: IProps) => {\r\n  const [weather8Days, setWeather8Days] = useState<IDataType | undefined>();\r\n\r\n  const getWeather8Days = (city: string) => {\r\n    fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${city}&type=like&units=metric&appid=2767f783403ac9fedd6aa003a5194148`\r\n    )\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status < 300) {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then((firstData) => {\r\n        if (firstData)\r\n          fetch(\r\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${firstData.coord.lat}&lon=${firstData.coord.lon}&exclude=current,minutely,hourly,alerts&units=metric&appid=2767f783403ac9fedd6aa003a5194148`\r\n          )\r\n            .then((res) => {\r\n              if (res.status >= 200 && res.status < 300) {\r\n                return res.json();\r\n              }\r\n            })\r\n            .then((data: IDataType) => {\r\n              if (data.daily) {\r\n                setWeather8Days(data);\r\n              }\r\n            });\r\n      });\r\n  };\r\n\r\n  const getMomentTime = (dt: number, timezone: number) => {\r\n    const nd = new Date((dt - 21600) * 1000 + 1000 * timezone);\r\n    const result = nd.toLocaleString().slice(0, 10);\r\n    const days = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"];\r\n    const day = days[nd.getDay()];\r\n    const time = result + \", \" + day;\r\n    return time;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.daysAmount !== \"days3\") getWeather8Days(props.match.params.city);\r\n    // eslint-disable-next-line\r\n  }, [props.currentCity, props.match]);\r\n\r\n  return (\r\n    <div className={styles.days8}>\r\n      <div className={styles.days8Title}>Weather forecast for 8 days</div>\r\n      <ul className={styles.daysList}>\r\n        {weather8Days?.daily.map((element, index) => (\r\n          <li\r\n            key={index}\r\n            className={styles.day}\r\n            style={\r\n              index % 2\r\n                ? { backgroundColor: \"#def8f6\" }\r\n                : { backgroundColor: \"rgb(233, 235, 272)\" }\r\n            }\r\n          >\r\n            <div className={styles.moment}>\r\n              {getMomentTime(element.dt, weather8Days.timezone_offset)}\r\n            </div>\r\n            <div className={styles.moment}>\r\n              night t: {element.temp.night}&#8451;\r\n            </div>\r\n            <div className={styles.moment}>\r\n              day t: {element.temp.day}&#8451;\r\n            </div>\r\n            <div className={styles.moment}>wind: {element.wind_speed};</div>\r\n            <Precipitation\r\n              rain={element.rain}\r\n              snow={element.snow}\r\n              interval1=\"\"\r\n              interval2=\"\"\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather8Days;\r\n","import * as React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Header from \"../../organisms/Header\";\r\nimport CurrentWeather from \"../../organisms/CurrentWeather\";\r\nimport Weather3Days from \"../../organisms/Weather3Days\";\r\nimport Weather8Days from \"../../organisms/Weather8Days\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nfunction Weather() {\r\n  const location = useLocation();\r\n  const [daysAmount, setDaysAmount] = useState(\r\n    location.pathname !== \"/\" ? location.pathname.slice(1, 6) : \"days3\"\r\n  );\r\n  const [currentCity, setcurrentCity] = useState(\r\n    location.pathname !== \"/\" ? location.pathname.slice(7) : \"Minsk\"\r\n  );\r\n\r\n  const newDaysAmount = (arg: string) => {\r\n    setDaysAmount(arg);\r\n  };\r\n\r\n  const changeCity = (\r\n    event:\r\n      | React.MouseEvent<HTMLElement>\r\n      | React.KeyboardEvent<HTMLInputElement>,\r\n    city: string\r\n  ) => {\r\n    setcurrentCity(city);\r\n  };\r\n\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (currentCity) {\r\n      history.push({\r\n        pathname: \"/\" + daysAmount + \"/\" + currentCity,\r\n      });\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [currentCity, daysAmount]);\r\n\r\n  return (\r\n    <main className={styles.weather}>\r\n      <Header\r\n        changeCity={changeCity}\r\n        currentCity={currentCity}\r\n        daysAmount={daysAmount}\r\n        newDaysAmount={newDaysAmount}\r\n      />\r\n      <CurrentWeather currentCity={currentCity} />\r\n      <Switch>\r\n        <Route exact path={`/days3/:city`}>\r\n          {({ match }) => (\r\n            <Weather3Days\r\n              daysAmount={daysAmount}\r\n              currentCity={currentCity}\r\n              match={match as { params: { city: string } }}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route exact path={`/days8/:city`}>\r\n          {({ match }) => (\r\n            <Weather8Days\r\n              daysAmount={daysAmount}\r\n              currentCity={currentCity}\r\n              match={match as { params: { city: string } }}\r\n            />\r\n          )}\r\n        </Route>\r\n      </Switch>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React from \"react\";\nimport Weather from \"./components/templates/Weather\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Weather />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}